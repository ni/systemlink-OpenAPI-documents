swagger: '2.0'
info:
  version: '1'
  title: Tag Historian Web Service
  description: SystemLink Tag Historian Service HTTP API.
  contact:
    name: NI
    url: 'https://www.ni.com/systemlink'
externalDocs:
  description: Technical Support
  url: https://ni.com/support
basePath: /nitaghistorian
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  apiKeyAuth:
    type: apiKey
    name: x-ni-api-key
    in: header
security:
  - apiKeyAuth: []
definitions:
  Error:
    description: Contains error information
    type: object
    properties:
      name:
        description: String error code
        type: string
      code:
        description: Numeric error code
        type: integer
      message:
        description: Complete error message
        type: string
      args:
        description: Positional argument values for the error code
        type: array
        items:
          type: string
    example:
      name: TagHistorian.InvalidId
      code: -251913
      message: 'Invalid id: 5c88d2ae26b41e22f08b4407.'
      args: []
  ErrorEntry:
    description: Populated with any errors that occur when performing multiple operations in a single
      request, with one inner error per failed operation.
    title: Error Entry
    properties:
      name:
        description: String error code
        type: string
      code:
        description: Numeric error code
        type: integer
      message:
        description: Complete error message
        type: string
      args:
        description: Positional argument values for the error code
        type: array
        items:
          type: string
      resourceType:
        description: Type of resource associated with the error
        type: string
      resourceId:
        description: Identifier of the resource associated with the error
        type: string
      innerErrors:
        type: array
        items:
          $ref: '#/definitions/ErrorEntry'
    example:
      name: Skyline.OneOrMoreErrorsOccurred
      code: -251040
      message: One or more errors occurred. See the contained list for details of each error.
      args: []
      innerErrors:
        - name: TagHistorian.DatabaseError
          code: -253304
          resourceType: tag
          resourceId: system2.tag1
          message: Database error.
          args: []
  Operation:
    description: Operation provided by the API
    type: object
    properties:
      available:
        type: boolean
        description: Whether the operation is available to the caller
      version:
        type: integer
        description: Version of the available operation
    required: [available]
    example:
      available: true
      version: 1
  V1Operations:
    title: V1 Operations
    description: V1 operations
    type: object
    properties:
      operations:
        description: >-
          Available operations in the v1 version of the API:

          - queryHistoricalTagValues: The ability to read historical tag values

          - modifyHistoricalTagValues: The ability to modify properties of historical tag values

        type: object
        properties:
          queryHistoricalTagValues:
            $ref: '#/definitions/Operation'
          modifyHistoricalTagValues:
            $ref: '#/definitions/Operation'
  HttpHistoricalValue:
    type: object
    title: Http Historical Value
    properties:
      value:
        description: The value of the tag at the time it was written, converted to a string.
        type: string
        example: '12.87'
      timestamp:
        description: The ISO-8601 formatted timestamp when the historical value was written, in UTC.
        type: string
        format: date-time
        example: '2019-03-13T09:51:38Z'
  HistoricalTagDecimatedQuery:
    description: Defines how decimated historical values are queried and for which tags. Only used for web
      socket messages.
    type: object
    title: Historical Tag Decimated Query
    properties:
      paths:
        description: One or more paths identifying the tags whose decimated historical values should be returned.
        type: array
        items:
          type: string
        example:
          - system1.tag1
          - system2.tag1
      workspace:
        description: The workspace ID for querying decimated tag values. If this is not specified, the tag values from the default workspace will be returned.
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
      startTime:
        description: Limits the returned historical values to those written at or after the given
          time in ISO-8601 format.
        type: string
        format: date-time
        example: '2018-09-04T18:45:08Z'
        default: '0001-01-01T00:00:00Z'
      endTime:
        description: Limits the returned historical values to those written at or before the given
          time in ISO-8601 format.
        type: string
        format: date-time
        example: '2018-09-04T18:45:08Z'
        default: '0001-01-01T00:00:00Z'
      decimation:
        description: When non-zero, the returned historical values are decimated across requested time
          span divided into the specified number of equal-sized intervals.
        type: integer
        minimum: 0
        default: 0
      sortOrder:
        description: Specifies ascending or descending order to return historical values, based
          on when each tag was written.
        type: string
        enum: [ASCENDING, DESCENDING]
        default: ASCENDING
  HistoricalTagUndecimatedQuery:
    description: Defines how undecimated historical values are queried and for which tags. Only used for web
      socket messages.
    type: object
    title: Historical Tag Undecimated Query
    properties:
      paths:
        description: One or more paths identifying the tags whose undecimated historical values should be returned.
        type: array
        items:
          type: string
        example:
          - system1.tag1
          - system2.tag1
      workspace:
        description: The workspace ID for querying tag values. If this is not specified, the tag values from the default workspace will be returned.
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
      startTime:
        description: Limits the returned historical values to those written at or after the given
          time in ISO-8601 format.
        type: string
        format: date-time
        example: '2018-09-04T18:45:08Z'
        default: '0001-01-01T00:00:00Z'
      endTime:
        description: Limits the returned historical values to those written at or before the given
          time in ISO-8601 format.
        type: string
        format: date-time
        example: '2018-09-04T18:45:08Z'
        default: '0001-01-01T00:00:00Z'
      take:
        description: Limits the returned historical values to the specified number of values. Use
          with the continuationToken property to implement pagination. Only applies when not specifying a decimation.
        type: integer
        minimum: 0
        default: 0
        example: 1
      continuationToken:
        type: string
        description: For non-decimated queries, a value generated by the server which should be sent
          in the next request to retrieve the next page of values.
        default: ''
      sortOrder:
        description: Specifies ascending or descending order to return historical values, based
          on when each tag was written.
        type: string
        enum: [ASCENDING, DESCENDING]
        default: ASCENDING
  HistoricalValue:
    type: object
    title: Historical Value
    properties:
      path:
        description: The path of the tag corresponding to the historical value.
        type: string
        example: system1.tag1
      workspace:
        description: The workspace ID of the tag
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
      value:
        description: The value of the tag at the time it was written, converted to a string.
        type: string
        example: '12.87'
      timestamp:
        description: The ISO-8601 formatted timestamp that the historical value was written, in UTC.
        type: string
        format: date-time
        example: '2019-03-13T09:51:38Z'
  TypeAndValues:
    type: object
    title: TypeAndValues
    properties:
      type:
        description: The type of the values
        type: string
        enum: [DOUBLE, INT, STRING, BOOLEAN, U_INT64, DATE_TIME]
      values:
        description: The values, encoded as strings
        type: array
        items:
          $ref: '#/definitions/HttpHistoricalValue'
  TagHistorianValues:
    type: object
    title: Tag Historian Values
    properties:
      results:
        description: An object containing the historical values for each requested tag that
          was successfully queried. The object's property names correspond to a tag path.
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeAndValues'
        example:
          system1.tag1:
            type: DOUBLE
            values:
              - value: '12.87'
                timestamp: '2019-03-13T09:51:38Z'
              - value: '3.2'
                timestamp: '2019-03-14T09:51:38Z'
      workspace:
        description: The workspace ID of the tag values
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
      error:
        description: This value is always null.
        type: object
        example: null
      failed:
        description: This value is always null.
        type: object
        example: null
  HistoricalTagAsyncDecimatedQueryJob:
    description: Information about an asynchronous decimated query.
    title: Historical Tag Async Decimated Query Job
    type: object
    properties:
      query:
          $ref: '#/definitions/HistoricalTagDecimatedQuery'
      requestId:
        description: The identifier of the asynchronous query to associate with a result in a later message.
        type: string
        example: '4cbba25a-c1b8-4fbe-8829-9ddfde555188'
      hasError:
        description: Whether the query had an error and cannot be completed.
        type: boolean
  HistoricalTagAsyncUndecimatedQueryJob:
    description: Information about an asynchronous undecimated query.
    title: Historical Tag Async Undecimated Query Job
    type: object
    properties:
      query:
        $ref: '#/definitions/HistoricalTagUndecimatedQuery'
      requestId:
        description: The identifier of the asynchronous query to associate with a result in a later message.
        type: string
        example: '4cbba25a-c1b8-4fbe-8829-9ddfde555188'
      hasError:
        description: Whether the query had an error and cannot be completed.
        type: boolean
  WebSocketAsyncDecimatedQueryRequest:
    title: Web Socket Async Decimated Query Request
    description: A web socket message sent by the client to asynchronously query for decimated historical tag
      values. The server will respond with a *WebSocketAsyncDecimatedQueryResponse* message confirming the start
      of the query, a *WebSocketAsyncQueryData* message for each query as they complete, and finally
      a *WebSocketAsyncDecimatedQueryComplete* once all queries have completed.
    type: object
    required:
      - action
      - queries
    properties:
      action:
        description: The action to perform. Must be set to "TagHistorianAsyncDecimatedQueryRequest".
        type: string
        enum: ['TagHistorianAsyncDecimatedQueryRequest']
        example: TagHistorianAsyncDecimatedQueryRequest
      queries:
        description: The list of historical queries to perform.
        type: array
        items:
          $ref: '#/definitions/HistoricalTagDecimatedQuery'
    example:
      action: TagHistorianAsyncDecimatedQueryRequest
      queries:
        - decimation: 1000
          endTime: '9999-01-01T00:00:00Z'
          sortOrder: ASCENDING
          startTime: '0001-01-01T00:00:00Z'
          paths: [system1.tag1]
  WebSocketAsyncUndecimatedQueryRequest:
    title: Web Socket Async Undecimated Query Request
    description: A web socket message sent by the client to asynchronously query for undecimated historical tag
      values. The server will respond with a *WebSocketAsyncUndecimatedQueryResponse* message confirming the start
      of the query, a *WebSocketAsyncQueryData* message for each query as they complete, and finally
      a *WebSocketAsyncUndecimatedQueryComplete* once all queries have completed.
    type: object
    required:
      - action
      - queries
    properties:
      action:
        description: The action to perform. Must be set to "TagHistorianAsyncUndecimatedQueryRequest".
        type: string
        enum: ['TagHistorianAsyncUndecimatedQueryRequest']
        example: TagHistorianAsyncUndecimatedQueryRequest
      queries:
        description: The list of historical queries to perform.
        type: array
        items:
          $ref: '#/definitions/HistoricalTagDecimatedQuery'
    example:
      action: TagHistorianAsyncUndecimatedQueryRequest
      queries:
        - endTime: '9999-01-01T00:00:00Z'
          sortOrder: ASCENDING
          startTime: '0001-01-01T00:00:00Z'
          paths: [system1.tag1]
  WebSocketAsyncDecimatedQueryResponse:
    title: Web Socket Async Decimated Query Response
    description: A web socket message sent by the server to confirm a *WebSocketAsyncDecimatedQueryRequest* sent
      by the client. A *WebSocketAsyncQueryData* message will be sent for each query as they complete
      and a *WebSocketAsyncDecimatedQueryComplete* once all queries have completed.
    type: object
    properties:
      action:
        description: The action performed. Must be set to "TagHistorianAsyncDecimatedQueryResponse".
        type: string
        enum: ['TagHistorianAsyncDecimatedQueryResponse']
        example: TagHistorianAsyncQueryResponse
      queryJobs:
        description: A list containing the information about each query started.
        type: array
        items:
          $ref: '#/definitions/HistoricalTagAsyncDecimatedQueryJob'
  WebSocketAsyncUndecimatedQueryResponse:
    title: Web Socket Async Undecimated Query Response
    description: A web socket message sent by the server to confirm a *WebSocketAsyncUndecimatedQueryRequest* sent
      by the client. A *WebSocketAsyncQueryData* message will be sent for each query as they complete
      and a *WebSocketAsyncUndecimatedQueryComplete* once all queries have completed.
    type: object
    properties:
      action:
        description: The action performed. Must be set to "TagHistorianAsyncUndecimatedQueryResponse".
        type: string
        enum: ['TagHistorianAsyncUndecimatedQueryResponse']
        example: TagHistorianAsyncQueryResponse
      queryJobs:
        description: A list containing the information about each query started.
        type: array
        items:
          $ref: '#/definitions/HistoricalTagAsyncUndecimatedQueryJob'
  WebSocketAsyncQueryData:
    title: Web Socket Async Query Data
    description: A web socket message sent by the server containing the result of a single completed
      asychronous query job and contains the result of the query. The server will send one of these
      messages as each query completes, followed by a single *WebSocketAsyncQueryComplete* message
      once all queries have completed.
    allOf:
      - type: object
        properties:
          action:
            description: The action performed. Must be set to "TagHistorianAsyncQueryDataRoutedMessage".
            type: string
            enum: ['TagHistorianAsyncQueryDataRoutedMessage']
            example: TagHistorianAsyncQueryDataRoutedMessage
          requestId:
            description: The identifier of the completed asynchronous query as given in the corresponding
              *WebSocketAsyncQueryResponse* message.
            type: string
            example: '4cbba25a-c1b8-4fbe-8829-9ddfde555188'
      - $ref: '#/definitions/TagHistorianValues'
  WebSocketAsyncDecimatedQueryComplete:
    title: Web Socket Async Decimated Query Complete
    description: A web socket message sent by the server indicating that all asynchronous queries
      for a single decimated query request are complete.
    type: object
    properties:
      action:
        description: The action performed. Must be set to "TagHistorianAsyncDecimatedQueryCompleteRoutedMessage".
        type: string
        enum: ['TagHistorianAsyncDecimatedQueryCompleteRoutedMessage']
        example: TagHistorianAsyncDecimatedQueryCompleteRoutedMessage
      queryJobs:
        description: A list containing the information about each query started.
        type: array
        items:
          $ref: '#/definitions/HistoricalTagAsyncDecimatedQueryJob'
  WebSocketAsyncUndecimatedQueryComplete:
    title: Web Socket Async Undecimated Query Complete
    description: A web socket message sent by the server indicating that all asynchronous undecimated queries
      for a single request are complete.
    type: object
    properties:
      action:
        description: The action performed. Must be set to "TagHistorianAsyncUndecimatedQueryCompleteRoutedMessage".
        type: string
        enum: ['TagHistorianAsyncUndecimatedQueryCompleteRoutedMessage']
        example: TagHistorianAsyncUndecimatedQueryCompleteRoutedMessage
      queryJobs:
        description: A list containing the information about each query started.
        type: array
        items:
          $ref: '#/definitions/HistoricalTagAsyncUndecimatedQueryJob'
  WebSocketSubscribeRequest:
    title: Web Socket Subscribe Request
    description: A web socket message sent by the client to subscribe to notifications when one or more
      tags have recorded new historical values. The server will send a *WebSocketSubscribeResponse*
      message to confirm the subscription and a *WebSocketAsyncValuesProcessed* message to notify of
      new values. Clients may send a *WebSocketUnsubscribeRequest* message to stop future notifications
      without closing the connection.
    type: object
    required:
      - action
      - searchPaths
    properties:
      action:
        description: The action to perform. Must be set to "TagHistorianAsyncSubscribeRequest".
        type: string
        enum: ['TagHistorianAsyncSubscribeRequest']
        example: TagHistorianAsyncSubscribeRequest
      searchPaths:
        description: Contains one or more tag paths to subscribe to. The paths may contain wildcards
          to subscribe to similar tags.
        type: array
        items:
          type: string
        example:
          - 'system1.tag1'
          - 'system2.*'
          - '*.tag2'
      workspace:
        description: The workspace ID to subscribe to for tag updates. If this is not specified, the tag values from the default workspace will be returned.
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
  WebSocketSubscribeResponse:
    title: Web Socket Subscribe Response
    description: A web socket message sent by the server to confirm a *WebSocketSubscribeRequest* sent
      by the client. A *WebSocketAsyncValuesProcessed* message will be sent each time new values are
      available.
    type: object
    properties:
      action:
        description: The action performed. Must be set to "TagHistorianAsyncSubscribeResponse".
        type: string
        enum: ['TagHistorianAsyncSubscribeResponse']
        example: TagHistorianAsyncSubscribeResponse
  WebSocketAsyncValuesProcessed:
    title: Web Socket Async Values Processed
    description: A web socket message sent by the server when new historical values are available
      for any of the tags the client has subscribed to via a *WebSocketSubscribeRequest* message.
    type: object
    properties:
      action:
        description: The action performed. Must be set to "TagHistorianAsyncValuesProcessedRoutedMessage".
        type: string
        enum: ['TagHistorianAsyncValuesProcessedRoutedMessage']
        example: TagHistorianAsyncValuesProcessedRoutedMessage
      values:
        description: The newly recorded historical values.
        type: array
        items:
          $ref: '#/definitions/HistoricalValue'
  WebSocketUnsubscribeRequest:
    title: Web Socket Unsubscribe Request
    description: A web socket message sent by the client to unsubscribe from notifications when one or
      more tags have recorded new historical values created by a previous *WebSocketSubscribeRequest*.
      The server will respond with a *WebSocketUnsubscribeResponse* message to confirm.
    type: object
    required:
      - action
      - searchPaths
    properties:
      action:
        description: The action to perform. Must be set to "TagHistorianAsyncUnsubscribeRequest".
        type: string
        enum: ['TagHistorianAsyncUnsubscribeRequest']
        example: TagHistorianAsyncUnsubscribeRequest
      searchPaths:
        description: Contains one or more tag paths to unsubscribe from. Paths must exactly match
          search paths used in the subscribe request to be unsubscribed, including wildcards.
          Specify the special value *\*\*\** (three wildcard characters) to unsubscribe from all tags.
        type: array
        items:
          type: string
      workspace:
        description: The workspace ID to unsubscribe from for tag updates. If this is not specified, the default workspace is assumed.
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
  WebSocketUnsubscribeResponse:
    title: Web Socket Unsubscribe Response
    description: A web socket message sent by the server to confirm a *WebSocketUnsubscribeRequest*.
    type: object
    properties:
      action:
        description: The action performed. Must be set to "TagHistorianAsyncUnsubscribeResponse".
        type: string
        enum: ['TagHistorianAsyncUnsubscribeResponse']
        example: TagHistorianAsyncUnsubscribeResponse
  DeleteRangeOfValues:
    title: Delete Range of Values
    description: Defines the range of values to delete for a tag.
    type: object
    properties:
      path:
        description: A tag path identifying the tag whose historical values in the range should
          be deleted.
        type: string
        example: system1.tag1
      startTime:
        description: Limits the range of historical values being deleted to those written at or after the
          given time in ISO-8601 format.
        type: string
        format: date-time
        example: '2000-01-01T00:00:00Z'
      endTime:
        description: Limits the range of historical values being deleted to those written at or before the
          given time in ISO-8601 format.
        type: string
        format: date-time
        example: '2099-01-01T00:00:00Z'
      workspace:
        description: The workspace ID for the tag. If this is not specified, the default workspace will be used.
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
  InsertValue:
    title: Insert Value
    description: Defines a value to insert for a tag.
    type: object
    required:
      - path
      - timestamp
      - value
    properties:
      path:
        description: The path of the tag for which to insert the value.
        type: string
        example: system1.tag1
      timestamp:
        description: The timestamp for the new value in ISO-8601 format.
        type: string
        format: date-time
        example: '2018-09-04T18:45:08Z'
      value:
        description: The value to insert.
        type: string
        example: '1234'
      workspace:
        description: The workspace ID for the tag. If this is not specified, the default workspace will be used.
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
  UpdateMetadata:
    title: Update Metadata
    description: Defines metadata values to update on a tag.
    type: object
    required:
      - path
      - type
      - retention
    properties:
      path:
        description: The path of the tag for which to update metadata.
        type: string
        example: system1.tag1
      type:
        description: Tag Data Type
        type: string
        enum: [BOOLEAN, INT, U_INT64, DATE_TIME, DOUBLE, STRING]
      retention:
        description: Retention period for tag values
        type: string
        enum: [COUNT, DURATION, PERMANENT, NONE]
      maxHistoryCount:
        description: For COUNT retention, it indicates the maximum number of tag istoric values that should be stored
        type: integer
        minimum: 0
      historyTTLDays:
        description: For DURATION retention, it indicates the maximum number of days the tag values should be stored
        type: integer
        minimum: 0
      workspace:
        description: The workspace ID of the tag. If not specified, the default workspace will be used.
        type: string
        example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
responses:
  Error:
    description: Error
    schema:
      description: Error response
      title: ErrorResponse
      type: object
      properties:
        error:
          $ref: '#/definitions/Error'
  Unauthorized:
    description: Not authorized
    headers:
      WWW_Authenticate:
        description: Information for how to authenticate
        type: string
paths:
  /:
    get:
      tags: [versioning]
      summary: API information
      description: Returns information about API versions and available operations.
      operationId: RootEndpoint
      # Explicitly mark security as an empty array - this route does not require any privileges.
      # Marking it this way prevents it from inheriting the top-level security settings.
      security: []
      responses:
        200:
          description: OK
          schema:
            description: Version information
            title: RootEndpointResponse
            type: object
            properties:
              v1:
                $ref: '#/definitions/V1Operations'
              version:
                description: Implementation version of the web service
                type: string
                example: 18.0.0.1722
  /{version}:
    parameters:
      - in: path
        name: version
        description: Version of the API to retrieve operations.
        type: string
        required: true
    get:
      tags: [versioning]
      summary: API version information
      description: Returns available operations for a single version of the API.
      operationId: RootEndpointWithVersion
      # Explicitly mark security as an empty array - this route does not require any privileges.
      # Marking it this way prevents it from inheriting the top-level security settings.
      security: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/V1Operations'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/query-history:
    post:
      tags: [history]
      summary: Read historical tag values
      description: Queries for the historical values of one or more tags.
      operationId: QueryHistory
      x-ni-operation: queryHistoricalTagValues
      produces:
        - application/json
      parameters:
        - in: body
          name: Request body
          required: true
          description: Defines how historical values are queried and for which tags.
          schema:
            description: Defines how historical values are queried and for which tags.
            type: object
            title: Http Query Request Body
            properties:
              path:
                description: A tag path identifying the tag whose historical values should
                  be returned.
                type: string
                example: system1.tag1
              workspace:
                description: The workspace ID for querying tag values. If this is not specified, the tag values from the default workspace will be returned.
                type: string
                example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
              startTime:
                description: Limits the returned historical values to those written at or after at the
                  given time in ISO-8601 format.
                type: string
                format: date-time
                example: '2018-09-04T18:45:08Z'
                default: '0001-01-01T00:00:00Z'
              endTime:
                description: Limits the returned historical values to those written at or before the
                  given time in ISO-8601 format.
                type: string
                format: date-time
                example: '2018-09-04T18:45:08Z'
                default: '9999-12-31T23:59:59Z'
              take:
                description: Limits the returned historical values to the specified number of values. Use
                  with the continuationToken property to implement pagination. Only applies when not specifying a decimation.
                type: integer
                minimum: 0
                default: 0
                example: 1
              continuationToken:
                description: For non-decimated queries, a value generated by the server which should be sent
                  in the next request to retrieve the next page of values.
                type: string
                default: ''
              sortOrder:
                description: Specifies the order to return historical values, either ascending or
                  descending order based on when each tag value was written.
                type: string
                enum: [ASCENDING, DESCENDING]
                default: ASCENDING
      responses:
        200:
          description: OK
          schema:
            type: object
            title: Http Query Response Body
            properties:
              values:
                description: An array of HttpHistoricalValue elements
                type: array
                items:
                  $ref: '#/definitions/HttpHistoricalValue'
              continuationToken:
                description: For non-decimated queries, a value generated by the server which should be sent
                  in the next request to retrieve the next page of values.
                type: string
                default: ''
              workspace:
                description: The workspace ID of the tag values
                type: string
                example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
              error:
                $ref: '#/definitions/ErrorEntry'
              failed:
                description: The paths of the tags that had errors.
                type: array
                items:
                  type: string
                example: [system2.tag1]
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/query-decimated-history:
    post:
      tags: [history]
      summary: Read decimated historical tag values
      description: Queries for the decimated historical data for one or more tags
      operationId: QueryDecimatedHistory
      x-ni-operation: queryDecimatedHistoricalTagValues
      produces:
        - application/json
      parameters:
        - in: body
          name: Request body
          required: true
          description: Defines how historical values are queried and for which tags.
          schema:
            description: Defines how historical values are queried and for which tags.
            type: object
            title: Http Query Request Body
            properties:
              paths:
                description: One or more paths identifying the tags whose historical values should
                  be returned.
                type: array
                items:
                  type: string
                example:
                  - system1.tag1
                  - system2.tag1
              workspace:
                description: The workspace ID for querying decimated tag values. If this is not specified, the tag values from the default workspace will be returned.
                type: string
                example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
              startTime:
                description: Limits the returned historical values to those written at or after at the
                  given time in ISO-8601 format.
                type: string
                format: date-time
                example: '2018-09-04T18:45:08Z'
                default: '0001-01-01T00:00:00Z'
              endTime:
                description: Limits the returned historical values to those written at or before the
                  given time in ISO-8601 format.
                type: string
                format: date-time
                example: '2018-09-04T18:45:08Z'
                default: '9999-12-31T23:59:59Z'
              decimation:
                description: The number of intervals to break the data between start and end time up into. The
                  service will return the entry, exit, min, and max value for each interval.
                type: integer
                minimum: 1
                default: 500
              sortOrder:
                description: Specifies the order to return historical values, either ascending or
                  descending order based on when each tag value was written.
                type: string
                enum: [ASCENDING, DESCENDING]
                default: ASCENDING
      responses:
        200:
          description: OK
          schema:
            type: object
            title: Http Query Response Body
            properties:
              results:
                description: An object containing the historical values for each requested tag that
                  was successfully queried. The object's property names correspond to a tag path.
                type: object
                additionalProperties:
                  $ref: '#/definitions/TypeAndValues'
                example:
                  system1.tag1:
                    type: DOUBLE
                    values:
                      - value: '12.87'
                        timestamp: '2019-03-13T09:51:38Z'
                      - value: '3.2'
                        timestamp: '2019-03-14T09:51:38Z'
              workspace:
                description: The workspace ID of the tag values
                type: string
                example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
              error:
                $ref: '#/definitions/ErrorEntry'
              failed:
                description: The paths of the tags that had errors.
                type: array
                items:
                  type: string
                example: [system2.tag1]
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/export-history:
    post:
      tags: [history]
      summary: Exports the undecimated data of one or more tags
      description: Exports the undecimated data of one or more tags. If "CSV" is specified as the responseFormat,
        the data is streamed as a single CSV file.
      operationId: ExportHistory
      x-ni-operation: exportHistory
      produces:
        - text/csv
      parameters:
        - in: body
          name: Request body
          required: true
          description: Contains the paths of the tags whose data should be exported
          schema:
            description: Contains the paths of the tags whose data should be exported
            type: object
            title: Tag Historian Export History Request
            properties:
              paths:
                description: The paths whose data should be exported
                type: array
                items:
                  type: string
                example:
                  - tag1
                  - tag2
              workspace:
                description: The workspace ID for exporting tag values. If this is not specified, the tag values from the default workspace will be returned.
                type: string
                example: 0c80cf49-54e9-4e92-b117-3bfa574caa84
              responseFormat:
                description: The format of the response. Currently only supports "CSV"
                type: string
                enum: [CSV]
                default: CSV
      responses:
        200:
          description: OK
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/update-metadata:
    post:
      tags: [history]
      summary: Update metadata
      description: Updates metadata for the specified tag. If the tag metadata does not exist it will be created.
      operationId: UpdateMetadata
      x-ni-operation: updateMetadata
      parameters:
        - in: body
          name: Metadata
          required: true
          description: Defines the tag metadata to update.
          schema:
            description: Defines the tag metadata to update.
            type: object
            title: Update Metadata Request
            properties:
              metadata:
                description: The metadata to update
                type: array
                items:
                  $ref: '#/definitions/UpdateMetadata'
      responses:
        204:
          description: No Content
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/insert-values:
    post:
      tags: [history]
      summary: Inserts values for the specified tag
      description: Inserts values for the specified tag. The tag metadata must already exist.
      operationId: InsertValues
      x-ni-operation: insertValues
      parameters:
        - in: body
          name: Values
          required: true
          description: Defines the values to insert.
          schema:
            description: Defines the values to insert.
            type: object
            title: Insert Values Request
            properties:
              values:
                description: The values to insert
                type: array
                items:
                  $ref: '#/definitions/InsertValue'
      responses:
        204:
          description: No Content
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/delete-values-by-range:
    post:
      tags: [history]
      summary: Deletes a range of data for the specified tag
      description: Deletes a range of data for the specified tag.
      operationId: DeleteValuesByRange
      x-ni-operation: deleteValuesByRange
      parameters:
        - in: body
          name: Request body
          required: true
          description: Defines the tag and range of values to delete.
          schema:
            description: Defines the tag and range of values to delete.
            type: object
            title: Delete Ranges of Values Request
            properties:
              ranges:
                description: The ranges of values to delete
                type: array
                items:
                  $ref: '#/definitions/DeleteRangeOfValues'
      responses:
        204:
          description: No Content
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/storage:
    get:
      tags: [storage]
      summary: Gets statistics about the user's storage
      description: Gets statistics about the user's storage.
      operationId: Storage
      x-ni-operation: storage
      responses:
        200:
          description: OK
          schema:
            type: object
            title: Storage Response
            properties:
              used:
                description: The amount of storage used in bytes.
                type: integer
                example: 1024
              limit:
                description: The total amount of storage in bytes.
                type: integer
                example: 104857600
              resource:
                description: The type of resource stored, e.g., "tags" or "files".
                type: string
                example: tags
              lastUpdated:
                description: The timestamp when the storage was last updated in ISO-8601 format.
                type: string
                format: date-time
                example: '2000-01-01T00:00:00Z'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/websocket:
    get:
      tags:
        - web socket
      summary: Open a WebSocket session
      description: Opens a persistent connection to the web server that allows two-way communication using
                   a JSON protocol. After you open a connection, you can query for historical values and
                   subscribe or unsubscribe for notifications when new historical values are recorded.
                   Refer to the *Models* section to access the schema for these actions.
      operationId: OpenWebSocketSession
      parameters:
        - in: header
          name: Upgrade
          type: string
          required: true
          x-example: websocket
        - in: header
          name: Connection
          type: string
          required: true
          x-example: Upgrade
        - in: header
          name: Sec-WebSocket-Version
          description: Protocol version of the WebSocket connection.
          type: string
          required: true
          x-example: 13
        - in: header
          name: Sec-WebSocket-Key
          description: Randomly selected sixteen-byte base64-encoded string. Used to confirm a
            valid WebSocket handshake. Must be selected randomly for each new connection.
          type: string
          required: true
          x-example: dGhlIHNhbXBsZSBub25jZQ==
      responses:
        101:
          description: Switching Protocols
          headers:
            Sec-WebSocket-Accept:
              description: Used in the WebSocket opening handshake. Set to a value derived from the
                Sec-WebSocket-Key header.
              type: string
        401:
          $ref: '#/responses/Unauthorized'
        426:
          description: Upgrade Required
